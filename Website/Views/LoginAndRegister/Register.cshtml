@model Website.Models.admin

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="row justify-content-md-center">
    <div class="col-md-5">
        @using (Html.BeginForm("Register", "LoginAndRegister", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="card">
                <div class="card-header">
                    <div class="card-title">Register</div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.name)
                        @Html.TextBoxFor(m => m.name, "", new { @class = "form-control", @placeholder = "Name" })
                        @Html.ValidationMessageFor(m => m.name, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.email)
                        @Html.TextBoxFor(m => m.email, "", new { @class = "form-control", @placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.email, "", new { @class = "badge badge-danger" })
                        @if (ViewBag.errorEmail != null)
                        {
                            <span class="badge badge-danger", style="color:red">@ViewBag.errorEmail</span>
                        }
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.phone)
                        @Html.TextBoxFor(m => m.phone, "", new { @class = "form-control", @placeholder = "Phone" })
                        @Html.ValidationMessageFor(m => m.phone, "", new { @class = "badge badge-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.avatar)
                        @Html.TextBoxFor(m => m.avatar, new { @class = "form-control", @placeholder = "Avatar" })
                        @Html.ValidationMessageFor(m => m.avatar, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.active)
                        @Html.TextBoxFor(m => m.active, new { @class = "form-control", @placeholder = "Active" })
                        @Html.ValidationMessageFor(m => m.active, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.password)
                        @Html.PasswordFor(m => m.password, new { @class = "form-control", @placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.password, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.remember_token)
                        @Html.TextBoxFor(m => m.remember_token, new { @class = "form-control", @placeholder = "Remember Token" })
                        @Html.ValidationMessageFor(m => m.remember_token, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword)
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confim Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "badge badge-danger" })
                        @if (ViewBag.errorConfirm != null)
                        {
                            <span class="badge badge-danger" , style="color:red">@ViewBag.errorConfirm</span>
                        }
                    </div>
                    <div class="form-group">
                        <input type="submit" name="submit" class="btn btn-danger" value="Register" />
                    </div>
                </div>
            </div>

        }
    </div>
</div>
